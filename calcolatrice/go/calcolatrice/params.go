// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the schema definition file instead

package calcolatrice

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableAddParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAddParams) Number1() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber1))
}

func (s ImmutableAddParams) Number2() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber2))
}

type MutableAddParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableAddParams) Number1() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber1))
}

func (s MutableAddParams) Number2() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber2))
}

type ImmutableDivideParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableDivideParams) Number1() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber1))
}

func (s ImmutableDivideParams) Number2() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber2))
}

type MutableDivideParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableDivideParams) Number1() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber1))
}

func (s MutableDivideParams) Number2() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber2))
}

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

// optional owner of this smart contract
func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

// optional owner of this smart contract
func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableMultiplyParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableMultiplyParams) Number1() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber1))
}

func (s ImmutableMultiplyParams) Number2() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber2))
}

type MutableMultiplyParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableMultiplyParams) Number1() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber1))
}

func (s MutableMultiplyParams) Number2() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber2))
}

type ImmutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

// new owner of this smart contract
func (s ImmutableSetOwnerParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

// new owner of this smart contract
func (s MutableSetOwnerParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableSubtractParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSubtractParams) Number1() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber1))
}

func (s ImmutableSubtractParams) Number2() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ParamNumber2))
}

type MutableSubtractParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableSubtractParams) Number1() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber1))
}

func (s MutableSubtractParams) Number2() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ParamNumber2))
}
